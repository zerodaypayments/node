<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
  		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"
>

	<amq:broker
		useJmx="true"
		persistent="false"
	>
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://${amq-validation-host}:${amq-validation-port}" />
		</amq:transportConnectors>
	</amq:broker>

	<bean
		id="amqFactory"
		class="org.apache.activemq.spring.ActiveMQConnectionFactory"
	>
		<property
			name="brokerURL"
			value="tcp://${amq-validation-host}:${amq-validation-port}" />
		<property name="trustedPackages">
			<list>
				<value>io.zdp.node</value>
			</list>
		</property>
	</bean>

	<jms:annotation-driven />

	<!-- New transfers: Create a topic to broadcast new transfers (T.NEW.TRANSFER.REQ) Subscribe to all validation nodes Topics to get broadcasted transfers (T.NEW.TRANSFER.REQ) Expose listener to receive new transfer responses via local broker (Q.TRANSFER.NEW.RESP) This listener comes up with the decision on the transfer Settlements: Create a topic to broadcast settled transactions (T.SETTLED.TRANSFER.REQ) Subscribe to all validation nodes Topics to get settled transfers (T.SETTLED.TRANSFER.REQ) Cancelled: Create a topic to broadcast cancelled transactions (T.CANCELLED.TRANSFER.REQ) Subscribe to all validation nodes Topics to get cancelled transfers (T.CANCELLED.TRANSFER.REQ) -->

	<!-- New transfers -->
	<amq:topic
		id="newTransferRequestTopic"
		name="T.TRANSFER.NEW.REQ"
		physicalName="T.TRANSFER.NEW.REQ" />

	<bean class="io.zdp.node.service.validation.getAccounts.GetNodeAccountsRequestTopicPublisher">
		<property
			name="connectionFactory"
			ref="amqFactory" />
		<property
			name="topic"
			ref="newTransferRequestTopic" />
		<property
			name="localNodeService"
			ref="localNodeService" />
	</bean>

	<jms:listener-container connection-factory="amqFactory">

		<jms:listener
			destination="Q.TRANSFER.NEW.RESP"
			ref="getNodeAccountsResponseQueueListener"
			method="onMessage" />
	</jms:listener-container>

</beans>