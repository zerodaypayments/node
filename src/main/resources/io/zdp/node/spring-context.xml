<?xml  version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd	
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
>

	<context:component-scan base-package="io.zdp.node.network, io.zdp.node.service, io.zdp.node.http, io.zdp.node.storage, io.zdp.node.ui, io.zdp.client" />

	<context:property-placeholder
		location="classpath:/io/zdp/node/app.properties"
		order="2"
		ignore-unresolvable="true" />

	<context:property-placeholder
		ignore-resource-not-found="true"
		ignore-unresolvable="true"
		order="1"
		location="file:/zdp/conf/api.properties" />

	<beans:bean
		id="NetworkTopologyService"
		class="io.zdp.model.network.NetworkTopologyService"
		init-method="init" />

	<context:annotation-config />

	<task:annotation-driven
		executor="default-task-executor"
		scheduler="default-task-scheduler" />

	<task:executor
		id="default-task-executor"
		pool-size="64" />

	<task:scheduler
		id="default-task-scheduler"
		pool-size="64" />

	<task:scheduled-tasks>
		<task:scheduled
			ref="NetworkTopologyService"
			method="init"
			fixed-delay="600000" /> <!-- 10 minutes -->
	</task:scheduled-tasks>


	<!-- Accounts database -->
	<bean
		id="accounts-dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
	>
		<property
			name="driverClass"
			value="${accounts.jdbc.driver}" />
		<property
			name="jdbcUrl"
			value="${accounts.jdbc.url}" />
		<property
			name="user"
			value="${accounts.jdbc.user}" />
		<property
			name="password"
			value="${accounts.jdbc.password}" />
		<property
			name="minPoolSize"
			value="${accounts.jdbc.min.pool.size}" />
		<property
			name="maxPoolSize"
			value="${accounts.jdbc.max.pool.size}" />
		<property
			name="maxIdleTime"
			value="${accounts.jdbc.max.idle.time}" />
	</bean>

	<bean
		id="accounts-entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
	>

		<property
			name="persistenceUnitName"
			value="io.zdp.dao.account" />

		<property
			name="dataSource"
			ref="accounts-dataSource" />

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property
					name="databasePlatform"
					value="${accounts.jdbc.dialect}" />
				<property
					name="generateDdl"
					value="true" />
			</bean>
		</property>

		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.isolation">2</prop>
			</props>
		</property>
	</bean>

	<bean
		id="accounts-transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager"
	>
		<property
			name="entityManagerFactory"
			ref="accounts-entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="accounts-transactionManager" />

	<jpa:repositories
		entity-manager-factory-ref="accounts-entityManagerFactory"
		transaction-manager-ref="accounts-transactionManager"
		base-package="io.zdp.node.storage.account.dao" />

	<beans:import resource="spring-amq-context.xml" />

</beans>